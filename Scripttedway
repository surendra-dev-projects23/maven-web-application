node {
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
    
    echo "build number is: ${env.BUILD_NUMBER}"
    echo "build id is: ${env.BUILD_ID}"
    echo "Job name  is: ${env.JOB_NAME}"
    echo "branch name  is: ${env.BRANCH_NAME}"
    echo "job url is: ${env.JOB_URL}"
     try {
	 
		def mavenVariable = tool name: 'maven3.9.5'
    
		stage ('CheckOutCode') {
		    sendSlackNotifications('STARTED')
			git branch: 'development', credentialsId: '2aeb9b09-28ec-4788-abc6-a1c884c78294', url: 'https://github.com/surendra-dev-projects23/maven-web-application.git'
		}
		stage ('Build') {
			sh "${mavenVariable}/bin/mvn clean package"
		}
		stage ('SonarQubeReportGenerate') {
			sh "${mavenVariable}/bin/mvn clean sonar:sonar"
		}
		stage ('UploadIntoNexus') {
			sh "${mavenVariable}/bin/mvn clean deploy"
		}
		stage ('DeployApplicationIntoTomcat') {
			sshagent(['56571939-0671-401a-86c7-7fad7cb6f801']) {
				sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.37.173:/opt/apache-tomcat-9.0.83/webapps"
			}
		}
	}catch(e) {
		currentBuild.result = "FAILED"
	}finally {
		sendSlackNotifications(currentBuild.result)
	}   
}
def sendSlackNotifications(String buildStatus = 'STRATED') {
	buildStatus = buildStatus ?: 'SUCCESS'
	
	def colorName = 'RED'
    def colorCode = '#FF0000'
	def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'ORANGE'
    colorCode = '#FFA500'
  } else if (buildStatus == 'SUCCESS') {
    color = 'BLUE'
    colorCode = '#0000FF'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend(color: colorCode, message: summary) 
}
